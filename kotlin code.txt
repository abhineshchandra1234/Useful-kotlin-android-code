//plugins
	//for referencing views
		id 'kotlin-android-extensions' 
	id 'kotlin-kapt'
	
	//works with navigation safe args dependency
		id 'androidx.navigation.safeargs.kotlin' 

//dependencies
	classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.1"
	
supportActionBar?.hide() – to hide actionbar
color –  to pick color    https://material.io/design/color/the-color-system.html#tools-for-picking-colors  
?. for safe calls
Left alt+enter – If alt+enter is not working
findFragmentbyId – to find fragment

//Firebase console
	https://console.firebase.google.com/u/0/

//Google Api Services
	https://console.developers.google.com/ 

//Internet Permission
	<uses-permission android:name="android.permission.INTERNET" /> 
	
//maven repository
	maven {
	          url 'https://maven.google.com'
	        } 
	 maven { url 'https://jitpack.io' }
google sign in android
https://firebase.google.com/docs/auth/android/google-signin - google sign in

//android studio keyboard shortcuts
	Ctrl+ I – to implement methods
	Ctrl+ O – to override functions
	Ctrl + B – To go to declaration
	Ctrl + D – To duplicate line
	Ctrl + Q - To know about function
	Ctrl + P - To see parameters
	Alt + F7 - To find usages
	tab - right-click -> close other tabs

//to generate constructors
	right-click -> generate -> secondary constructors
//Toast statement
	Toast.makeText(context,"Please enter all the information",Toast.LENGTH_SHORT).show()
Toast(this).apply {						-		Custom Toast
                duration = Toast.LENGTH_LONG
				
				
this is a sample text				
                view = layoutInflater.inflate(R.layout.custom_toast,clToast)
                show()
            }
Gradle-Tasks-android-signingReport – SH1 certificate
//Intent
	val dashboardIntent = Intent(this, DashboardActivity::class.java)
	startActivity(dashboardIntent)
	finish()
	Intent(this, ThirdActivity::class.java).also {
                startActivity(it)
            }
	it.putExtra("EXTRA_NAME",name) – to pass value through intent
	val name = intent.getStringExtra("EXTRA_NAME") – to get value from intent
private lateinit var – Initialize variable
Build-Generate Signed Bundle/apk – To build apk
google play console – to deploy apps
//To move views upwards while using keyboard
	android:windowSoftInputMode="stateVisible|adjustResize"  -- use inside manifest file activity
imageView2.setImageResource(bundle!!.getInt("image")) – to set image
implementation 'androidx.recyclerview:recyclerview:1.1.0' – recycler view
implementation 'com.squareup.picasso:picasso:2.71828' - to display image from url
implementation 'com.amitshekhar.android:android-networking:1.0.2' - android networking library
//libraries
	//coroutines
		implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
		implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
		implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
		implementation  'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
		

	//retrofit2
		implementation 'com.squareup.retrofit2:retrofit:2.9.0'
		implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
		implementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'
		implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
	
	// Navigation Component
		implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
		implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'

    // Room components
		implementation "androidx.room:room-runtime:2.2.5"
		kapt "androidx.room:room-compiler:2.2.5"
		implementation "androidx.room:room-ktx:2.2.5"
		androidTestImplementation "androidx.room:room-testing:2.2.5"

    // Lifecycle components
		implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
		implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
		implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    // Kotlin components
		implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72"
		api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"
		api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"
		
	// AnyChart components
		implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'
		implementation 'com.android.support:multidex:1.0.3'
		multiDexEnabled true -- inside defaultConfig
		
	//ViewModel and LiveData
		implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //Recyclerview
    	implementation 'androidx.recyclerview:recyclerview:1.1.0'
	//CardView
		implementation "androidx.cardview:cardview:1.0.0"
//Networking
	implementation 'com.amitshekhar.android:android-networking:1.0.2'

    // Gson
		implementation "com.google.code.gson:gson:2.8.6"

    // Glide
		implementation 'com.github.bumptech.glide:glide:4.11.0'

    // Paging
		implementation "androidx.paging:paging-runtime:2.1.2"

    //Rx
		implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
		implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
	
Log.d("MyIntentService","Service is stopping...") – to print log msg
sample APi or https://reqres.in/ - for api calls

//for viewing json on chrome
	json viewer chrome extensions 
//Kotlin Networking(for api calls)
	Retrofit, Volley 
	 
	ref - https://www.youtube.com/watch?v=sBCE_hOFnQU
//api
	//cat-facts api
		https://alexwohlbruck.github.io/cat-facts/docs/
		
	//fake api - Free to use fake Online REST API for testing and prototyping
		https://jsonplaceholder.typicode.com/
		
	//Documentation and Test Consoles for Over 1400 Public APIs
		https://any-api.com/
		
	//to generate fake api
		https://www.mockable.io/a/#/
		
//change actionbar name
	setupActionBarWithNavController(findNavController(R.id.fragment))
	
//for viewing error
	verbose - caused by or general error msg
	
//push code to github
	shift + insert -  to copy cmds in bash
	open git bash at desired location
	git init - to initialize the repository
	git add . - to add all the files to the given folder.
	git status - to view all the files which are going to be staged to the first commit.
	git commit -m 'first commit' - which adds the change to the local repository.
	The HTTPS or URL is copied from the given GitHub account, which is the place of the remote repository.
	git remote add origin 'your_url_name'
	git push -u origin master - used for pushing local content to GitHub.
	//change remote url git
		git remote set-url origin https://hostname/USERNAME/REPOSITORY.git
		
	shortcut
		//shift+home - home
		//shift+end - end
	
	ref - https://www.datacamp.com/community/tutorials/git-push-pull
	
//fonts
	https://fonts.google.com/
	search font.ttf

//custom toolbar
	https://youtu.be/e5_C9e_gKOM

//redo
	ctrl+shift+z
	
//to find recruiters
	company_name recruiter on linkedin
	find maild id and send resume
